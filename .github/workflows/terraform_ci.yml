name: Terraform CI

on:
  pull_request:

jobs:
  set-matrix:
    runs-on: ubuntu-20.04

    env:
      TF_ROOT_DIR: .

    outputs:
      dirs: ${{ steps.set-matrix.outputs.dirs }}

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Detect dirs containing created or updated *.tf
        id: set-matrix
        run: |
          dirs=$(git diff HEAD..origin/main --diff-filter=d --name-only | grep -E "\.tf$" | xargs -I {} dirname {} | uniq | jq -R -s -c 'split("\n")[:-1]')
          echo $dirs
          echo "::set-output name=dirs::${dirs}"

  ci:
    needs: set-matrix

    if: needs.set-matrix.outputs.dirs != '[]'

    runs-on: ubuntu-20.04

    strategy:
      fail-fast: false
      max-parallel: 1
      matrix:
        TF_DIR: ${{ fromJson(needs.set-matrix.outputs.dirs) }}

    env:
      TF_DIR: ${{ matrix.TF_DIR }}
      TF_VERSION: 1.1.2
      TFLINT_VERSION: v0.34.1
      TFLINT_AWS_VERSION: 0.11.0

    steps:
      - uses: actions/checkout@v2

      - uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - run: terraform fmt -check -diff
        working-directory: ${{ env.TF_DIR }}
        continue-on-error: true

      - uses: terraform-linters/setup-tflint@v1
        with:
          tflint_version: ${{ env.TFLINT_VERSION }}

      - name: Run tflint
        run: |
          cat <<EOF > .tflint.hcl
          plugin "aws" {
              enabled = true
              version = "${{ env.TFLINT_AWS_VERSION }}"
              source  = "github.com/terraform-linters/tflint-ruleset-aws"
          }
          EOF
          tflint --init
          tflint
        working-directory: ${{ env.TF_DIR }}
