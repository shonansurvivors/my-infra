name: Create tfupdate PR

on:
  workflow_dispatch:
  schedule:
    - cron: '0 21 * * SUN'

env:
  TFUPDATE_BINARY: https://github.com/minamijoyo/tfupdate/releases/download/v0.6.3/tfupdate_0.6.3_linux_amd64.tar.gz
  TFUPDATE_BASE_BRANCH: main
  TFUPDATE_BRANCH: tfupdate
  TF_ROOT_DIR: .

jobs:
  tfupdate:
    runs-on: ubuntu-20.04

    strategy:
      fail-fast: false
      max-parallel: 1
      matrix:
        TFUPDATE_TARGET:
          - terraform
          - aws

    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      TFUPDATE_TARGET: ${{ matrix.TFUPDATE_TARGET }}

    steps:
      - id: check-branch
        # NOTE: Shows lots of warnings because of https://github.com/octokit/request-action#warnings
        # NOTE: If ${{ env.TFUPDATE_BRANCH }} doesn't exist, you'll get 404 Not Found error, but no problem.
        uses: octokit/request-action@7e93b91076fad3920c29d44eb2a6311d929db3dd #v2.1.0
        with:
          route: GET /repos/{repository}/git/ref/{ref}
          repository: ${{ github.repository }}
          ref: heads/${{ env.TFUPDATE_BRANCH }}
        continue-on-error: true

      - uses: actions/checkout@v2
        if: steps.check-branch.outputs.status == 200
        with:
          ref: ${{ env.TFUPDATE_BRANCH }}

      - uses: actions/checkout@v2
        if: steps.check-branch.outputs.status != 200
        with:
          ref: ${{ env.TFUPDATE_BASE_BRANCH }}

      - name: Create tfupdate branch if not exist
        if: steps.check-branch.outputs.status != 200
        run: |
          git branch ${{ env.TFUPDATE_BRANCH }}
          git branch --set-upstream-to=origin/${{ env.TFUPDATE_BASE_BRANCH }} ${{ env.TFUPDATE_BRANCH }}

      - name: Get the commit sha before tfupdate
        id: before-sha
        run: |
          echo ::set-output name=sha::$(git log --pretty=%H | head -n1)

      - name: Setup tfupdate from binary
        run: |
          set -o pipefail
          wget -P /tmp ${{ env.TFUPDATE_BINARY }}
          basename ${{ env.TFUPDATE_BINARY }} | xargs -I {} tar xvf /tmp/{} -C /tmp
          sudo mv /tmp/tfupdate /usr/local/bin
          sudo chmod +x /usr/local/bin/tfupdate

      - if: env.TFUPDATE_TARGET == 'terraform'
        run: tfupdate terraform -r .

      - if: env.TFUPDATE_TARGET != 'terraform'
        run: tfupdate provider -r ${{ env.TFUPDATE_TARGET }} .

      - uses: EndBug/add-and-commit@8c12ff729a98cfbcd3fe38b49f55eceb98a5ec02 #v7.5
        if: env.TFUPDATE_TARGET == 'terraform'
        with:
          branch: ${{ env.TFUPDATE_BRANCH }}
          message: "tfupdate terraform -r ."

      # Todo: Update Terraform version definition in other workflow yml

      - uses: EndBug/add-and-commit@8c12ff729a98cfbcd3fe38b49f55eceb98a5ec02 #v7.5
        if: env.TFUPDATE_TARGET != 'terraform'
        with:
          branch: ${{ env.TFUPDATE_BRANCH }}
          message: "tfupdate provider -r ${{ env.TFUPDATE_TARGET }}"


      - name: Get the commit sha after tfupdate
        id: after-sha
        run: |
          echo ::set-output name=sha::$(git log --pretty=%H | head -n1)

      - uses: repo-sync/pull-request@5ba2c80b97c87b9174c1548141b7acd80f6376e1 #v2.6.1
        if: ${{ steps.before-sha.outputs.sha != steps.after-sha.outputs.sha }}
        with:
          source_branch: ${{ env.TFUPDATE_BRANCH }}
          destination_branch: ${{ env.TFUPDATE_BASE_BRANCH }}
          pr_title: Update Terraform Version & Terraform Providers Version
          pr_body: |
            **This pull request is created automatically by the CI: [tfupdate](https://github.com/${{ github.repository }}/actions?query=workflow%3Atfupdate)**

            ---

            Run the below code to try this changes.

            \`\`\`
            atlantis apply
            \`\`\`
          pr_label: tfupdate
          pr_allow_empty: false
