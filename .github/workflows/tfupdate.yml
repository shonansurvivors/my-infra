name: tfupdate

on:
  pull_request: # Todo: remove
  workflow_dispatch:
  schedule:
    - cron: '0 21 * * SUN'

env:
  TFUPDATE_BINARY: https://github.com/minamijoyo/tfupdate/releases/download/v0.6.3/tfupdate_0.6.3_linux_amd64.tar.gz
  TFUPDATE_BASE_BRANCH: main
  TFUPDATE_BRANCH: tfupdate
  TF_ROOT_DIR: .

jobs:
  set-matrix:
    runs-on: ubuntu-latest

    outputs:
      dirs: ${{ steps.find-tfstate-dirs.outputs.dirs }}

    steps:
      - uses: actions/checkout@v2

      - name: Find tfstate dirs
        id: find-tfstate-dirs
        run: |
          dirs=$(find ${TF_ROOT_DIR} -type f -name '*.tf' -exec dirname {} \; | grep -v 'modules\|\.terraform' | uniq |  jq -R -s -c 'split("\n")[:-1]')
          echo $dirs
          echo "::set-output name=dirs::${dirs}"

  provider:
    needs: set-matrix

    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      max-parallel: 1
      matrix:
        TF_DIR: ${{ fromJson(needs.set-matrix.outputs.dirs) }}
        TFUPDATE_PROVIDER:
          - terraform
          - aws

    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      TFUPDATE_PROVIDER: ${{ matrix.TFUPDATE_PROVIDER }}
      TF_DIR: ${{ matrix.TF_DIR }}

    steps:
      - id: check-branch
        # NOTE: Shows lots of warnings because of https://github.com/octokit/request-action#warnings
        uses: octokit/request-action@v2.0.18
        with:
          route: GET /repos/:repository/git/ref/:ref
          repository: ${{ github.repository }}
          ref: heads/${{ env.TFUPDATE_BRANCH }}
        continue-on-error: true

      - uses: actions/checkout@v2
        if: steps.check-branch.outputs.status == 200
        with:
          ref: ${{ env.TFUPDATE_BRANCH }}

      - uses: actions/checkout@v2
        if: steps.check-branch.outputs.status != 200
        with:
          ref: ${{ env.TFUPDATE_BASE_BRANCH }}

      - name: Create tfupdate branch if not exist
        if: steps.check-branch.outputs.status != 200
        run: |
          git branch ${{ env.TFUPDATE_BRANCH }}
          git branch --set-upstream-to=origin/${{ env.TFUPDATE_BASE_BRANCH }} ${{ env.TFUPDATE_BRANCH }}

      - name: Get the commit sha before tfupdate
        id: before-sha
        run: |
          echo ::set-output name=sha::$(git log --pretty=%H | head -n1)

      - name: Setup tfupdate from binary
        run: |
          set -o pipefail
          wget -P /tmp ${TFUPDATE_BINARY}
          basename ${TFUPDATE_BINARY} | xargs -I {} tar xvf /tmp/{} -C /tmp
          sudo mv /tmp/tfupdate /usr/local/bin
          sudo chmod +x /usr/local/bin/tfupdate

      - name: tfupdate ${{ env.TFUPDATE_PROVIDER }} .
        if: env.TFUPDATE_PROVIDER == 'terraform'
        run: |
          cd ${TF_DIR}
          tfupdate ${TFUPDATE_PROVIDER} .

      - name: tfupdate provider ${{ env.TFUPDATE_PROVIDER }} .
        if: env.TFUPDATE_PROVIDER != 'terraform'
        run: |
          cd ${TF_DIR}
          tfupdate provider ${TFUPDATE_PROVIDER} .

      - uses: EndBug/add-and-commit@v7
        if: env.TFUPDATE_PROVIDER == 'terraform'
        with:
          branch: ${{ env.TFUPDATE_BRANCH }}
          message: "tfupdate ${{ env.TFUPDATE_PROVIDER }} ${{ env.TF_DIR}}"

      - uses: EndBug/add-and-commit@v7
        if: env.TFUPDATE_PROVIDER != 'terraform'
        with:
          branch: ${{ env.TFUPDATE_BRANCH }}
          message: "tfupdate provider ${{ env.TFUPDATE_PROVIDER }} ${{ env.TF_DIR}}"

      - name: Get the commit sha after tfupdate
        id: after-sha
        run: |
          echo ::set-output name=sha::$(git log --pretty=%H | head -n1)

      - uses: repo-sync/pull-request@v2
        if: ${{ steps.before-sha.outputs.sha != steps.after-sha.outputs.sha }}
        with:
          source_branch: ${{ env.TFUPDATE_BRANCH }}
          destination_branch: ${{ env.TFUPDATE_BASE_BRANCH }}
          pr_title: Update Terraform Version & Terraform Providers Version
          pr_body: |
            **This pull request is created automatically by the CI: [tfupdate](https://github.com/${{ github.repository }}/actions?query=workflow%3Atfupdate)**

            ---

            Run the below code to try this changes.

            \`\`\`
            atlantis apply
            \`\`\`
          pr_label: tfupdate
          pr_allow_empty: false
